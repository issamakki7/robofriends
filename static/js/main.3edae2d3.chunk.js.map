{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCMCQ,EAXF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACtB,OACI,sBAAKC,UAAW,yDAAhB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCSLK,EAdE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OAAO,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIF,KAAQO,EAAOI,GAAGX,KAAMC,MAASM,EAAOI,GAAGV,OAAhEU,MAGtB,OACA,8BAECH,KCCUI,EATG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAChB,OACI,qBAAKV,UAAU,MAAf,SACI,uBAAOA,UAAU,4BAA4BW,KAAK,SAASC,YAAY,gBAAgBC,SAAYH,OCKhGI,EATA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAS,SAASC,OAAO,kBAAmBC,OAAQ,SAAjE,SACKJ,EAAMK,YCmBJC,E,kDArBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAO,CACRC,UAAU,GAHA,E,8DAOAC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAKxB,OAAGG,KAAKJ,MAAMC,SACH,0DAEJG,KAAKX,MAAMK,a,GAjBCQ,aCuDZC,G,wDAjDX,aAAc,IAAD,8BACT,gBAmBJC,eAAgB,SAACC,GACb,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAnBxC,EAAKZ,MAAQ,CACTlB,OAAO,GACP4B,YAAa,IAJR,E,gEAQO,IAAD,OACfG,MAAM,8CACL7C,MAAK,SAAA8C,GACF,OAAOA,EAASC,UAEnB/C,MAAK,SAAAgD,GAAK,OAAE,EAAKX,SAAS,CAACvB,OAAOkC,S,+BAW9B,IAAD,EACyBZ,KAAKJ,MAA3BlB,EADH,EACGA,OAAO4B,EADV,EACUA,YACRO,EAAiBnC,EAAOoC,QAAO,SAACC,GAClC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASX,EAAYU,kBAEzD,OAAmB,IAAhBtC,EAAOwC,OACC,yCAKX,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAegB,KAAKI,iBAC/B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAASmC,e,GAzCjBX,cCAlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAGDC,SAASC,eAAe,SAM1B9D,M","file":"static/js/main.3edae2d3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Card = ({name,email,id})=>{\r\n    return (\r\n        <div className= 'tc bg-yellow dib br2 pa3 ma2 grow bw2 shadow-5 br-pill'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from \"react\";\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots})=>{\r\n    const cardComponent = robots.map((user,i)=>{\r\n        return <Card key={i} id={robots[i].id} name = {robots[i].name} email = {robots[i].email}  />\r\n    })\r\n\r\n    return(\r\n    <div>\r\n    \r\n    {cardComponent}\r\n    \r\n    </div>\r\n    )\r\n    \r\n}\r\nexport default CardList;","import React from \"react\";\r\n\r\n\r\nconst SearchBox = ({searchChange})=>{\r\n    return(\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-yellow' type='search' placeholder='Search Robots' onChange = {searchChange} />\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props)=>{\r\n    return(\r\n        <div style={{overflow:'scroll',border:'1px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info) {\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.hasError) {\r\n            return <h1>Oops! That is not good..</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n    \r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots:[],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>{\r\n            return response.json();\r\n        })\r\n        .then(users=>this.setState({robots:users})\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n    onSearchChange= (event)=> {\r\n        this.setState({searchfield:event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const {robots,searchfield} = this.state;\r\n        const filteredRobots = robots.filter((robot)=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if(robots.length===0){\r\n            return <h2>Loading</h2>\r\n        }\r\n        else{\r\n\r\n        return(\r\n        <div className='tc'>\r\n            <h1 className='f1'>Robofriends</h1>\r\n            <SearchBox searchChange ={this.onSearchChange}/>\r\n            <Scroll>\r\n                <ErrorBoundry>\r\n                <CardList robots ={filteredRobots}/>\r\n                </ErrorBoundry>\r\n            </Scroll>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from \"./containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}